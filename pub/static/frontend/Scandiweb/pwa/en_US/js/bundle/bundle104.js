require.config({"config": {
        "jsbuild":{"Magento_GoogleShoppingAds/js/gtag-cart.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global gtag*/\ndefine([\n    'jquery',\n    'Magento_Customer/js/customer-data',\n    'underscore',\n    'jquery/ui'\n], function ($, customerData, _) {\n    'use strict';\n\n    /**\n     * Delete cookie\n     *\n     * @param {String} name\n     */\n    function delCookie(name) {\n        var date = new Date(0);\n\n        document.cookie = name + '=' + '; path=/; expires=' + date.toUTCString();\n    }\n\n    $.widget('mage.sccGtagCart', {\n        options: {\n            cookieAddToCart: '',\n            cookieRemoveFromCart: ''\n        },\n\n        addedProducts: [],\n        removedProducts: [],\n\n        /**\n         * Format products array\n         *\n         * @param {Object} productsIn\n         *\n         * @private\n         */\n        _formatProductsArray: function (productsIn) {\n            var productsOut = [],\n                itemId,\n                i;\n\n            /* eslint-disable max-depth */\n            /* eslint-disable eqeqeq */\n            for (i in productsIn) {\n\n                if (i != 'length' && productsIn.hasOwnProperty(i)) {\n\n                    if (!_.isUndefined(productsIn[i].sku)) {\n                        itemId = productsIn[i].sku;\n                    } else {\n                        itemId = productsIn[i].id;\n                    }\n\n                    productsOut.push({\n                        'id': itemId,\n                        'name': productsIn[i].name,\n                        'price': productsIn[i].price,\n                        'quantity': parseInt(productsIn[i].qty, 10)\n                    });\n                }\n            }\n\n            /* eslint-enable max-depth */\n            /* eslint-enable eqeqeq */\n\n            return productsOut;\n        },\n\n        /**\n         * Cart item add action\n         *\n         * @private\n         */\n        _cartItemAdded: function () {\n            var products,\n                params,\n                i;\n\n            if (!this.addedProducts.length) {\n                return;\n            }\n            products = this._formatProductsArray(this.addedProducts);\n\n            for (i = 0; i < products.length; i++) {\n                params = {\n                    'ecomm_prodid': products[i].id,\n                    'ecomm_pagetype': 'cart'\n                };\n                gtag('event', 'add_to_cart', params);\n            }\n\n            this.addedProducts = [];\n        },\n\n        /**\n         * Cart item remove action\n         *\n         * @private\n         */\n        _cartItemRemoved: function () {\n            var products,\n                params,\n                i;\n\n            if (!this.removedProducts.length) {\n                return;\n            }\n            products = this._formatProductsArray(this.removedProducts);\n\n            for (i = 0; i < products.length; i++) {\n                params = {\n                    'ecomm_prodid': products[i].id,\n                    'ecomm_pagetype': 'cart'\n                };\n                gtag('event', 'remove_from_cart', params);\n            }\n\n            this.removedProducts = [];\n        },\n\n        /**\n         * Parse add from cart cookies.\n         *\n         * @private\n         */\n        _parseAddToCartCookies: function () {\n            var addProductsList;\n\n            if ($.mage.cookies.get(this.options.cookieAddToCart)) {\n                this.addedProducts = [];\n                addProductsList = decodeURIComponent($.mage.cookies.get(this.options.cookieAddToCart));\n                this.addedProducts = JSON.parse(addProductsList);\n                delCookie(this.options.cookieAddToCart);\n                this._cartItemAdded();\n            }\n        },\n\n        /**\n         * Parse remove from cart cookies.\n         *\n         * @private\n         */\n        _parseRemoveFromCartCookies: function () {\n            var removeProductsList;\n\n            if ($.mage.cookies.get(this.options.cookieRemoveFromCart)) {\n                this.removedProducts = [];\n                removeProductsList = decodeURIComponent($.mage.cookies.get(this.options.cookieRemoveFromCart));\n                this.removedProducts = JSON.parse(removeProductsList);\n                delCookie(this.options.cookieRemoveFromCart);\n                this._cartItemRemoved();\n            }\n        },\n\n        /**\n         * @inheritdoc\n         *\n         * @private\n         */\n        _create: function () {\n            var context = this;\n\n            setInterval(function () {\n                context._parseAddToCartCookies();\n                context._parseRemoveFromCartCookies();\n            }, 1000);\n        }\n    });\n\n    return $.mage.sccGtagCart;\n});\n"}
}});
