require.config({"config": {
        "jsbuild":{"Magento_Braintree/js/paypal/button.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'rjsResolver',\n        'uiRegistry',\n        'uiComponent',\n        'underscore',\n        'jquery',\n        'braintreeClient',\n        'braintreePayPal',\n        'braintreePayPalCheckout',\n        'Magento_Braintree/js/paypal/form-builder',\n        'domReady!'\n    ],\n    function (\n        resolver,\n        registry,\n        Component,\n        _,\n        $,\n        braintreeClient,\n        braintreePayPal,\n        braintreePayPalCheckout,\n        formBuilder\n    ) {\n        'use strict';\n\n        return Component.extend({\n\n            defaults: {\n                displayName: null,\n                clientToken: null,\n                paypalCheckoutInstance: null\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initialize: function () {\n                var self = this;\n\n                self._super();\n\n                braintreeClient.create({\n                    authorization: self.clientToken\n                })\n                    .then(function (clientInstance) {\n                        return braintreePayPal.create({\n                            client: clientInstance\n                        });\n                    })\n                    .then(function (paypalCheckoutInstance) {\n                        self.paypalCheckoutInstance = paypalCheckoutInstance;\n\n                        return self.paypalCheckoutInstance;\n                    });\n\n                self.initComponent();\n\n                return this;\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initComponent: function () {\n                var self = this,\n                    selector = '#' + self.id,\n                    $this = $(selector),\n                    data = {\n                        amount: $this.data('amount'),\n                        locale: $this.data('locale'),\n                        currency: $this.data('currency')\n                    };\n\n                $this.html('');\n                braintreePayPalCheckout.Button.render({\n                    env: self.environment,\n                    style: {\n                        color: 'blue',\n                        shape: 'rect',\n                        size: 'medium',\n                        label: 'pay',\n                        tagline: false\n                    },\n\n                    /**\n                     * Payment setup\n                     */\n                    payment: function () {\n                        return self.paypalCheckoutInstance.createPayment(self.getClientConfig(data));\n                    },\n\n                    /**\n                     * Triggers on `onAuthorize` event\n                     *\n                     * @param {Object} response\n                     */\n                    onAuthorize: function (response) {\n                        return self.paypalCheckoutInstance.tokenizePayment(response)\n                            .then(function (payload) {\n                                $('body').trigger('processStart');\n\n                                formBuilder.build(\n                                    {\n                                        action: self.actionSuccess,\n                                        fields: {\n                                            result: JSON.stringify(payload)\n                                        }\n                                    }\n                                ).submit();\n                            });\n                    }\n                }, selector);\n\n                return this;\n            },\n\n            /**\n             * @returns {Object}\n             * @private\n             */\n            getClientConfig: function (data) {\n                var config = {\n                    flow: 'checkout',\n                    amount: data.amount,\n                    currency: data.currency,\n                    locale: data.locale,\n                    enableShippingAddress: true\n                };\n\n                if (this.displayName) {\n                    config.displayName = this.displayName;\n                }\n\n                return config;\n            }\n        });\n    }\n);\n"}
}});
