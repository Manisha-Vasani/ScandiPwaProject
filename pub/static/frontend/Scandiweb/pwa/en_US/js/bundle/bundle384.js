require.config({"config": {
        "jsbuild":{"Dotdigitalgroup_Email/js/webBehaviorTracking.js":"define([\n    'Magento_Catalog/js/product/storage/storage-service'\n], function (storage) {\n    'use strict';\n\n    return {\n        identifiersConfig: {\n            namespace: 'product_data_storage'\n        },\n\n        productStorageConfig: {\n            namespace: 'product_data_storage',\n            customerDataProvider: 'product_data_storage',\n            className: 'DataStorage'\n        },\n\n        initIdsStorage: function () {\n            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));\n            return this;\n        },\n\n        idsStorageHandler: function (idsStorage) {\n            this.productStorage = storage.createStorage(this.productStorageConfig);\n            this.productStorage.data.subscribe(this.dataCollectionHandler.bind(this));\n            return this;\n        },\n\n        dataCollectionHandler: function (data) {\n            var productId = parseInt(\n                document.querySelector('[data-product-id]')\n                    .getAttribute('data-product-id')\n            );\n\n            var productData = data[productId];\n            var trackingData = {\n                product_name: productData.name,\n                product_url: productData.url,\n                product_currency: productData.currency_code,\n                product_status: parseInt(productData.is_salable) === 1 ? 'In stock' : 'Out of stock',\n                product_price: productData.price_info.final_price,\n                product_specialPrice: productData.price_info.special_price || 0,\n                product_sku: productData.extension_attributes.ddg_sku,\n                product_brand: productData.extension_attributes.ddg_brand || '',\n                product_categories: (productData.extension_attributes.ddg_categories || []).join(','),\n                product_image_path: productData.extension_attributes.ddg_image || '',\n                product_description: productData.extension_attributes.ddg_description || ''\n            };\n\n            this.wbtTrack(trackingData);\n        },\n\n        initWbt: function (id) {\n            window.dm_insight_id = id;\n\n            (function(w,d,u,t,o,c){w['dmtrackingobjectname']=o;c=d.createElement(t);c.async=1;c.src=u;t=d.getElementsByTagName\n            (t)[0];t.parentNode.insertBefore(c,t);w[o]=w[o]||function(){(w[o].q=w[o].q||[]).push(arguments);};\n            })(window, document, '//static.trackedweb.net/js/_dmptv4.js', 'script', 'dmPt');\n\n            return this;\n        },\n\n        wbtTrack: function (data) {\n            window.dmPt('track', data || {});\n        },\n\n        /**\n         * @param settings\n         * @constructor\n         */\n        'Dotdigitalgroup_Email/js/webBehaviorTracking': function (settings) {\n            this.initWbt(settings.id)\n                .initIdsStorage();\n\n            var body = document.getElementsByTagName('body')[0];\n\n            if (body.classList.contains('catalogsearch-result-index')) {\n                var search = document.getElementById('search');\n                this.wbtTrack({\n                    'searched_term' : search.getAttribute('value')\n                });\n            } else if (!body.classList.contains('catalog-product-view')) {\n                this.wbtTrack();\n            }\n        }\n    };\n});\n"}
}});
